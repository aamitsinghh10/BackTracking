 void solve(int index, int target, vector<int> &candidate, vector<vector<int>> &ans, vector<int>&res) 
    {
        if(target==0) {
            ans.push_back(res);
            return;
        }        
        for(int i=index;i<candidate.size();i++)
        {
            if(i>index && candidate[i]==candidate[i-1])
                continue; 
            if(candidate[i]>target) 
                break; 
            res.push_back(candidate[i]);
            solve(i+1, target-candidate[i], candidate, ans,res); 
            res.pop_back(); 
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) 
    {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> ans;
        vector<int> res;
        
        solve(0,target,candidates,ans,res);
        return ans;
    }
